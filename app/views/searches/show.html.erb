<% provide(:title, 'Search') %>
<div class="row search-header">
	<div class="col-md-3">
		<h2>Results</h2>
	</div>
	<div class="search-results-bar">
	<div class="col-md-7">
		<%= form_for(:search, url: searches_path) do |f| %>
			<% unless @query.nil? %>
   			<%= f.text_field :query, value: @query, class: "form-control" %>
			<% else %>
   			<%= f.text_field :query, class: "form-control" %>
			<% end %>
	</div>
	<div class="col-md-2">
			<%= submit_tag "Search", class: "btn btn-primary pull-right" %>
		<% end %>
		</div>
		</div>
</div>

<div class="row">
            <div class="col-md-3">
              <div class="sidebar-nav">
                <ul class="nav nav-stacked">
									<% if ((@current_page != -1) || ((@current_page == -1) && (@current_page_users == -1))) %>
										<li class="active">
									<% else %>
										<li>
									<% end %>
									
									<a href="#streams" data-toggle="tab"> Streams <span class="badge badge-info"><%= @count_streams %></span></a></li>
                  <li><a href="#users" data-toggle="tab"> Users <span class="badge badge-info"><%= @count_users %></span></a></li>
                </ul>
                <h2>Filter</h2>
                <%= form_for(:search, url: searches_path) do |f| %>
                <%= f.hidden_field :query, value: @query  %>
                <%= f.text_field :filter_unit, :placeholder => "Unit" , class: "form-control" %>
                <br/ >
                <%= f.text_field :filter_tag, :placeholder => "Tag" , class: "form-control"%>
                <br/ >
                <%= f.check_box :filter_active %>
                <%= f.label :filter_active, "Active".html_safe%>
                <%= f.select "active", 
					options_for_select([['On',"on"],
										['Off', "off"]
										], "on"), 
											{}, 
											class: "form-control"
										%>
                <br/ >
                <%= f.check_box :filter_rank %>
                <%= f.label :filter_rank, "User ranking".html_safe%>
                <br/ >
                <div id="slider-range"></div>
                <br/ >
                <%= f.text_field :min_val, id:'min_val', :placeholder => "min", :size => 5, class: "form-control"%>
                -
                <%= f.text_field :max_val, id:'max_val',:placeholder => "max", :size => 5, class: "form-control"%>
                <br/ >
                <%= f.check_box :filter_map %>
                <%= f.label :filter_map, "Location".html_safe%>
                <div id="map-canvas"></div>
				<div id="info"></div>
				<%= f.hidden_field :filter_longitude, id: "long"%>
				<%= f.hidden_field :filter_latitude, id: "lati"%>
				<%= f.hidden_field :filter_distance, id: "radkm"%>
				<br/>
                <%= submit_tag "Filter" %>
                          <style type="text/css">
      #map-canvas {
        height: 200px;
        width: 170px;
      }
    </style>

    <script type="text/javascript"
        src="http://www.google.com/jsapi?autoload={'modules':[{name:'maps',version:3,other_params:'sensor=false'}]}"></script>
    <script type="text/javascript">
    function init() {

    	function displayInfo(widget) {
		  var longitude = document.getElementById('long');
		  var latitude = document.getElementById('lati');
		  var radkm = document.getElementById('radkm');
		  longitude.value = widget.get('position').lng();
		  latitude.value = widget.get('position').lat();
		  radkm.value = widget.get('distance');
		}

    	function RadiusWidget() {
    		var circle = new google.maps.Circle({
    			strokeWeight: 2
    		});
    		// Set the distance property value, default to 50km.
    		this.set('distance', 5);
    		this.bindTo('bounds', circle);
    		circle.bindTo('center',this);
    		circle.bindTo('map', this);
    		circle.bindTo('radius',this);
    		this.addSizer_();
    	}
    	RadiusWidget.prototype = new google.maps.MVCObject();

    	RadiusWidget.prototype.distance_changed = function() {
    		this.set('radius', this.get('distance')*1000);
    	};

    	RadiusWidget.prototype.addSizer_ = function() {
		  var sizer = new google.maps.Marker({
		    draggable: true,
		    title: 'Drag me!'
		  });

		  sizer.bindTo('map', this);
		  sizer.bindTo('position', this, 'sizer_position');

		  var me = this;
		  google.maps.event.addListener(sizer, 'drag', function() {
		  // Set the circle distance (radius)
		  me.setDistance();
		  me.center_changed();
		  });
		};

		RadiusWidget.prototype.center_changed = function() {
		  var bounds = this.get('bounds');

		  // Bounds might not always be set so check that it exists first.
		  if (bounds) {
		    var lng = bounds.getNorthEast().lng();

		    // Put the sizer at center, right on the circle.
		    var position = new google.maps.LatLng(this.get('center').lat(), lng);
		    this.set('sizer_position', position);
		  }
		};

		RadiusWidget.prototype.distanceBetweenPoints_ = function(p1, p2) {
		  if (!p1 || !p2) {
		    return 0;
		  }

		  var R = 6371; // Radius of the Earth in km
		  var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;
		  var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;
		  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
		    Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) *
		    Math.sin(dLon / 2) * Math.sin(dLon / 2);
		  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
		  var d = R * c;
		  return d;
		};

		RadiusWidget.prototype.setDistance = function() {
		  // As the sizer is being dragged, its position changes.  Because the
		  // RadiusWidget's sizer_position is bound to the sizer's position, it will
		  // change as well.
		  var pos = this.get('sizer_position');
		  var center = this.get('center');
		  var distance = this.distanceBetweenPoints_(center, pos);

		  // Set the distance property for any objects that are bound to it
		  this.set('distance', distance);
		};

		function DistanceWidget(map) {
		  this.set('map', map);
		  this.set('position', map.getCenter());

		  var marker = new google.maps.Marker({
		    draggable: true,
		    title: 'Move me!'
		  });

		  // Bind the marker map property to the DistanceWidget map property
		  marker.bindTo('map', this);

		  // Bind the marker position property to the DistanceWidget position
		  // property
		  marker.bindTo('position', this);

					  // Create a new radius widget
		  var radiusWidget = new RadiusWidget();

			// Bind the radiusWidget map to the DistanceWidget map
		  radiusWidget.bindTo('map', this);

			// Bind the radiusWidget center to the DistanceWidget position
		  radiusWidget.bindTo('center', this, 'position');

		  // Bind to the radiusWidgets' distance property
			this.bindTo('distance', radiusWidget);

			// Bind to the radiusWidgets' bounds property
			this.bindTo('bounds', radiusWidget);
		}
		DistanceWidget.prototype = new google.maps.MVCObject();

        var mapDiv = document.getElementById('map-canvas');
        var map = new google.maps.Map(mapDiv, {
          center: new google.maps.LatLng(59.8581, 17.6447),
          zoom: 8,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        });
      	var distanceWidget = new DistanceWidget(map);

      	google.maps.event.addListener(distanceWidget, 'distance_changed', function() {
		  displayInfo(distanceWidget);
		});

		google.maps.event.addListener(distanceWidget, 'position_changed', function() {
		  displayInfo(distanceWidget);
		});

      }

      google.maps.event.addDomListener(window, 'load', init);
    </script>
				
            <% end %>
              </div>
            </div>
						<div class="col-md-9">

							<%= form_for(:search, url: searches_path) do |f| %>
								<div class="row">
									<div class="col-md-6 number-results-found">
										We have found <%= @count_all %> results
									</div>
									<div class="col-md-2">
										<%= label_tag "Sort by: " %>
									</div>
									<div class="col-md-4">
										<%= f.select "sort_by", 
											options_for_select([["None", "none"], ['Name',    "name"],
																				  ['User ranking', "user_ranking"]
																		 	   ], params['search']['sort_by']), 
											{}, onclick: "this.form.submit();", 
											class: "form-control"
										%>
									</div>
								</div>

								<%= f.hidden_field :query, value: @query  %>

							<% end %>
							<br/ >
              <div class="main-content">
                <div id="myPillContent" class="pill-content">
                  <div class="tab-content">

										<% if (@current_page_users == -1) && (@current_page == -1) %>	
                    		<div class="tab-pane fade in active search-results" id="streams">
										<% elsif (@current_page_users != -1) %>
                    	<div class="tab-pane fade in search-results" id="streams">
										<% elsif (@current_page != -1) %>
                    	<div class="tab-pane fade in active search-results" id="streams">
										<% end %>

											<ul>
												<% @streams.each do |stream| %>
													<li class="search-result">
													<div class="row">
														<div class="search-graph" id=<%= 'id' + stream['_id'] %> data-stream=<%= stream['_id'] %>></div>
															
														<div class="col-md-9">
															<h4>
																<% resource_id = stream['_source']['resource_id'] %>
																<% stream_id = stream['_id'] %>
																<% url = "/resources/#{resource_id}/streams/#{stream_id}" %>
															<%= link_to(stream['_source']['name'], url) %></h4>
														</div>
														<div class="col-md-3 search-results-stats">
															<ul class="pull-right">
																<li>
																	<span class="glyphicon glyphicon-user"></span>
																	<%= stream['_source']['subscribers'] %>
																</li>
																<li>
																	<span class="glyphicon glyphicon-star"></span>
																	<%= stream['_source']['user_ranking'] %>
																</li>
															</ul>
														</div>
													
													
													<p><%= stream['_source']['description'] %></p>
													<span class="last-update">Last updated <%= distance_of_time_in_words(Date.iso8601(stream['_source']['last_update']), Time.now, include_seconds: true) %> ago</span>
													<br /><br />
													</li>
												<% end %>
											</ul>

											<% if @nb_pages > 1 %>
												<div class="center">	
												<ul class="pagination">
													<% unless @current_page < 1 %>
														<li><%= link_to searches_path(:search => {:query => @query, :page => @current_page - 1}), :method => :post do %>&laquo;<% end %></li>
													<% else %>
														<li class="disabled"><a href='#'>&laquo;</a></li>
													<% end %>
													<% @nb_pages.times do |i| %>
														<% if i == @current_page %>
															<li class="active"><%= link_to "#{i+1}", searches_path(:search => {:query => @query, :page => i}), :method => :post %></li>
															<% else %>
															<li><%= link_to "#{i+1}", searches_path(:search => {:query => @query, :page => i}), :method => :post %></li>
														<% end %>
													<% end %>
													<% unless (@current_page + 1) >= @nb_pages %>
														<li><%= link_to searches_path(:search => {:query => @query, :page => @current_page + 1}), :method => :post do %> &raquo;<% end %></li>
													<% else %>
														<li class="disabled"><a href='#'>&raquo;</a></li>
													<% end %>
												</ul>
												</div>
											<% end %>

										</div>
										<% if @current_page_users == -1 %> 
                    	<div class="tab-pane fade in" id="users">
										<% else %>
                    	<div class="tab-pane fade in active" id="users">
										<% end %>

											<ul>
												<% @users.each do |user| %>
													<li class="search-result">
													<div class="row">
														<div class="col-md-9">
															<h4>
																
																<span class="glyphicon glyphicon-stats"></span>
																<% user_id = user['_source']['_id'] %>
																<% url = "/users/#{user_id}" %>
															<%= link_to(user['_source']['username'], url) %></h4>
														</div>
														<div class="col-md-3 search-results-stats">
															<ul class="pull-right">
															</ul>
														</div>	
													</div>
													<p><%= user['_id'] %></p>
													<span class="last-update">Last updated <%= distance_of_time_in_words(Time.now, Time.now, include_seconds: true) %> ago</span>
													<br /><br />
													</li>
												<% end %>
											</ul>


											<% if @nb_pages_users > 1 %>
												<div class="center">	
												<ul class="pagination">
													<% unless @current_page_users < 1 %>
														<li><%= link_to searches_path(:search => {:query => @query, :page_users => @current_page_users - 1}), :method => :post do %>&laquo;<% end %></li>
													<% else %>
														<li class="disabled"><a href='#'>&laquo;</a></li>
													<% end %>
													<% @nb_pages_users.times do |i| %>
														<% if i == @current_page_users %>
															<li class="active"><%= link_to "#{i+1}", searches_path(:search => {:query => @query, :page_users => i}), :method => :post %></li>
															<% else %>
															<li><%= link_to "#{i+1}", searches_path(:search => {:query => @query, :page_users => i}), :method => :post %></li>
														<% end %>
													<% end %>
													<% unless (@current_page_users + 1) >= @nb_pages_users %>
														<li><%= link_to searches_path(:search => {:query => @query, :page_users => @current_page_users + 1}), :method => :post do %> &raquo;<% end %></li>
													<% else %>
														<li class="disabled"><a href='#'>&raquo;</a></li>
													<% end %>
												</ul>
												</div>
											<% end %>


                    </div>
                  </div>
                </div>
							</div>
							<br />
							<br />
							<br />

            </div>
